{
  "id": 966,
  "name": "New Composed Shader",
  "fragment": "#extension GL_OES_standard_derivatives : enable\n\nprecision highp float;\nprecision highp int;\nuniform float time;\nuniform vec2 resolution;\nuniform mat4 modelMatrix;\nuniform vec3 uvScale;\nuniform vec3 uvOffset;\nuniform vec3 colorFront1;\nuniform vec3 colorFront2;\nuniform vec3 colorRight1;\nuniform vec3 colorRight2;\nuniform vec3 colorTop1;\nuniform vec3 colorTop2;\nuniform sampler2D map;\nuniform float gradientMix;\nuniform float luminosity;\nuniform vec3 Cube_Edges1473028860737_112_color;\nuniform float Cube_Edges1473028860737_112_brightness;\nuniform float falloff;\nuniform vec3 Transparent_Glow1473028895371_124_color;\nuniform float start;\nuniform float end;\nuniform float alpha;\nuniform vec3 baseColor;\nuniform float Star_Swamp_3D_version_1473028937742_136_brightness;\nuniform float scale;\nvarying vec2 sky1473028779065_61_vUv;\nmat2 m = mat2(0.90, 0.110, -0.70, 1.00);\nfloat ha(float n) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            return fract(sin(n) * 758.5453);\n                                                                                                                                                                                                                        }\nfloat no(in vec3 x) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec3 p = floor(x);\n                                                                                                                                                                                                                            vec3 f = fract(x);\n                                                                                                                                                                                                                            float n = p.x + p.y * 57.0 + p.z * 800.0;\n                                                                                                                                                                                                                            float res = mix(mix(mix(ha(n + 0.0), ha(n + 1.0), f.x), mix(ha(n + 57.0), ha(n + 58.0), f.x), f.y), mix(mix(ha(n + 800.0), ha(n + 801.0), f.x), mix(ha(n + 857.0), ha(n + 858.0), f.x), f.y), f.z);\n                                                                                                                                                                                                                            return res;\n                                                                                                                                                                                                                        }\nfloat fbm(vec3 p) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            float f = 0.0;\n                                                                                                                                                                                                                            f += 0.50000 * no(p);\n                                                                                                                                                                                                                            p = p * 2.02;\n                                                                                                                                                                                                                            f -= 0.25000 * no(p);\n                                                                                                                                                                                                                            p = p * 2.03;\n                                                                                                                                                                                                                            f += 0.12500 * no(p);\n                                                                                                                                                                                                                            p = p * 2.01;\n                                                                                                                                                                                                                            f += 0.06250 * no(p);\n                                                                                                                                                                                                                            p = p * 2.04;\n                                                                                                                                                                                                                            f -= 0.03125 * no(p);\n                                                                                                                                                                                                                            return f / 0.984375;\n                                                                                                                                                                                                                        }\nfloat cloud(vec3 p) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            p -= fbm(vec3(p.x, p.y, 0.0) * 0.5) * 2.25;\n                                                                                                                                                                                                                            float a = 0.0;\n                                                                                                                                                                                                                            a -= fbm(p * 3.0) * 2.2 - 1.1;\n                                                                                                                                                                                                                            if (a < 0.0) a = 0.0;\n                                                                                                                                                                                                                             a = a * a;\n                                                                                                                                                                                                                            return a;\n                                                                                                                                                                                                                        }\nvec3 f2(vec3 c) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            c += ha(sky1473028779065_61_vUv.x + sky1473028779065_61_vUv.y * 9.9) * 0.01;\n                                                                                                                                                                                                                            c *= 0.7 - length(sky1473028779065_61_vUv.xy / resolution.xy - 0.5) * 0.7;\n                                                                                                                                                                                                                            float w = length(c);\n                                                                                                                                                                                                                            c = mix(c * vec3(1.0, 1.0, 1.6), vec3(w, w, w) * vec3(1.4, 1.2, 1.0), w * 1.1 - 0.2);\n                                                                                                                                                                                                                            return c;\n                                                                                                                                                                                                                        }\nvarying vec4 worldCoord;\nvarying vec2 Images_World_Based_Gradients1473028794671_76_vUv;\nvarying float lightStrengthX;\nvarying float lightStrengthY;\nvarying float lightStrengthZ;\nvec3 toGrayscale(vec3 color) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            float average = (color.r + color.g + color.b) / 3.0;\n                                                                                                                                                                                                                            return vec3(average);\n                                                                                                                                                                                                                        }\nfloat getLuminosity(vec3 color) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            return color.r * 0.299 + color.g * 0.587 + color.b * 0.114;\n                                                                                                                                                                                                                        }\nvarying vec2 Cube_Edges1473028860737_112_vUv;\nvarying vec3 fPosition;\nvarying vec3 fNormal;\nvarying vec2 Star_Swamp_3D_version_1473028937742_136_vUv;\nvarying vec3 Star_Swamp_3D_version_1473028937742_136_vPosition;\nvarying vec3 Star_Swamp_3D_version_1473028937742_136_vNormal;\nfloat field(in vec3 p) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            float strength = 7. + .03 * log(1.e-6 + fract(sin(time) * 4373.11));\n                                                                                                                                                                                                                            float accum = 0.;\n                                                                                                                                                                                                                            float prev = 0.;\n                                                                                                                                                                                                                            float tw = 0.;\n                                                                                                                                                                                                                            for (int i = 0;\n i < 32; ++i) \n                                                                                                                                                                                                                            {\n                                                                                                                                                                                                                                float mag = dot(p, p);\n                                                                                                                                                                                                                                p = abs(p) / mag + vec3(-.51, -.4, -1.3);\n                                                                                                                                                                                                                                float w = exp(-float(i) / 7.);\n                                                                                                                                                                                                                                accum += w * exp(-strength * pow(abs(mag - prev), 2.3));\n                                                                                                                                                                                                                                tw += w;\n                                                                                                                                                                                                                                prev = mag;\n                                                                                                                                                                                                                            }\n                                                                                                                                                                                                                            return max(0., 5. * accum / tw - .7);\n                                                                                                                                                                                                                        }\nvec3 nrand3(vec2 co) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec3 a = fract(cos(co.x * 8.3e-3 + co.y) * vec3(1.3e5, 4.7e5, 2.9e5));\n                                                                                                                                                                                                                            vec3 b = fract(sin(co.x * 0.3e-3 + co.y) * vec3(8.1e5, 1.0e5, 0.1e5));\n                                                                                                                                                                                                                            vec3 c = mix(a, b, 0.5);\n                                                                                                                                                                                                                            return c;\n                                                                                                                                                                                                                        }\nvec4 sky1473028779065_61_main(void) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 sky1473028779065_61_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                            vec2 position = (sky1473028779065_61_vUv.xy / resolution.xy);\n                                                                                                                                                                                                                            position.y += 0.2;\n                                                                                                                                                                                                                            vec2 coord = vec2((position.x - 0.5) / position.y, 1.0 / (position.y + 0.2));\n                                                                                                                                                                                                                            coord += time * 0.1;\n                                                                                                                                                                                                                            float q = cloud(vec3(coord * 1.0, 0.222));\n                                                                                                                                                                                                                            vec3 col = vec3(0.2, 0.4, 0.5) + vec3(q * vec3(0.2, 0.4, 0.1));\n                                                                                                                                                                                                                            sky1473028779065_61_gl_FragColor = vec4(f2(col), 1.0);\n                                                                                                                                                                                                                            return sky1473028779065_61_gl_FragColor *= 0.0;\n                                                                                                                                                                                                                        }\nvec4 Images_World_Based_Gradients1473028794671_76_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Images_World_Based_Gradients1473028794671_76_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                            vec3 gradientTop = mix(colorTop1, colorTop2, (worldCoord.x + uvOffset.z) * uvScale.z);\n                                                                                                                                                                                                                            vec3 gradientRight = mix(colorRight1, colorRight2, (worldCoord.z + uvOffset.x) * uvScale.x);\n                                                                                                                                                                                                                            vec3 gradientFront = mix(colorFront1, colorFront2, (worldCoord.z + uvOffset.y) * uvScale.y);\n                                                                                                                                                                                                                            vec3 mapColor = vec3(texture2D(map, Images_World_Based_Gradients1473028794671_76_vUv));\n                                                                                                                                                                                                                            vec3 mapGray = toGrayscale(mapColor);\n                                                                                                                                                                                                                            vec3 outputColor = (gradientFront * lightStrengthY) + (gradientRight * lightStrengthX) + (gradientTop * lightStrengthZ);\n                                                                                                                                                                                                                            vec3 colorizedMap = (mapGray * outputColor) + (getLuminosity(mapColor) * luminosity);\n                                                                                                                                                                                                                            vec3 mixedWithMapColor = mix(colorizedMap, mapColor, gradientMix);\n                                                                                                                                                                                                                            Images_World_Based_Gradients1473028794671_76_gl_FragColor = vec4(mixedWithMapColor, 1.0);\n                                                                                                                                                                                                                            return Images_World_Based_Gradients1473028794671_76_gl_FragColor *= 0.0;\n                                                                                                                                                                                                                        }\nvec4 Cube_Edges1473028860737_112_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Cube_Edges1473028860737_112_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                            vec2 multiplier = pow(abs(Cube_Edges1473028860737_112_vUv - 0.5), vec2(falloff));\n                                                                                                                                                                                                                            Cube_Edges1473028860737_112_gl_FragColor = vec4(Cube_Edges1473028860737_112_color * Cube_Edges1473028860737_112_brightness * length(multiplier), 1.0);\n                                                                                                                                                                                                                            return Cube_Edges1473028860737_112_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                        }\nvec4 Transparent_Glow1473028895371_124_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Transparent_Glow1473028895371_124_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                            vec3 normal = normalize(fNormal);\n                                                                                                                                                                                                                            vec3 eye = normalize(-fPosition.xyz);\n                                                                                                                                                                                                                            float rim = smoothstep(start, end, 1.0 - dot(normal, eye));\n                                                                                                                                                                                                                            float value = clamp(rim * alpha, 0.0, 1.0);\n                                                                                                                                                                                                                            Transparent_Glow1473028895371_124_gl_FragColor = vec4(Transparent_Glow1473028895371_124_color * value, value);\n                                                                                                                                                                                                                            return Transparent_Glow1473028895371_124_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                        }\nvec4 Star_Swamp_3D_version_1473028937742_136_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Star_Swamp_3D_version_1473028937742_136_gl_FragColor = vec4(0.0);\n                                                                                                                                                                                                                            vec3 pos = Star_Swamp_3D_version_1473028937742_136_vPosition / scale;\n                                                                                                                                                                                                                            vec3 p = vec3(pos / 4.) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                            p += 0.18 * vec3(sin(time / 16.), sin(time / 12.), sin(time / 128.));\n                                                                                                                                                                                                                            vec3 p2 = vec3(pos / (4. + sin(time * 0.11) * 0.2 + 0.2 + sin(time * 0.15) * 0.3 + 0.4)) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                            p2 += 0.2 * vec3(sin(time / 16.), sin(time / 12.), sin(time / 128.));\n                                                                                                                                                                                                                            vec3 p3 = vec3(pos / (4. + sin(time * 0.14) * 0.23 + 0.23 + sin(time * 0.19) * 0.31 + 0.31)) + vec3(2., -1.3, -1.);\n                                                                                                                                                                                                                            p3 += 0.25 * vec3(sin(time / 16.), sin(time / 12.), sin(time / 128.));\n                                                                                                                                                                                                                            float t = field(p);\n                                                                                                                                                                                                                            float t2 = field(p2);\n                                                                                                                                                                                                                            float t3 = field(p3);\n                                                                                                                                                                                                                            float v = (1. - exp((abs(pos.x) - 1.) * 6.)) * (1. - exp((abs(pos.y) - 1.) * 6.)) * (1. - exp((abs(pos.z) - 1.) * 6.));\n                                                                                                                                                                                                                            vec3 c1 = mix(.8, 1., v) * vec3(1.8 * t * t * t, 1.4 * t * t, t);\n                                                                                                                                                                                                                            vec3 c2 = mix(.8, 1., v) * vec3(1.4 * t2 * t2 * t2, 1.8 * t2 * t2, t2);\n                                                                                                                                                                                                                            vec3 c3 = mix(.8, 1., v) * vec3(1.4 * t3 * t3 * t3, 1.8 * t3 * t3, t3);\n                                                                                                                                                                                                                            c1 *= baseColor;\n                                                                                                                                                                                                                            c2 *= baseColor;\n                                                                                                                                                                                                                            c3 *= baseColor;\n                                                                                                                                                                                                                            Star_Swamp_3D_version_1473028937742_136_gl_FragColor = vec4(Star_Swamp_3D_version_1473028937742_136_brightness * vec3(c1 * 0.7 + c2 * 0.5 + c3 * 0.3), 1.0);\n                                                                                                                                                                                                                            return Star_Swamp_3D_version_1473028937742_136_gl_FragColor *= 1.0;\n                                                                                                                                                                                                                        }\nvoid main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            gl_FragColor = (sky1473028779065_61_main() + Images_World_Based_Gradients1473028794671_76_main() + Cube_Edges1473028860737_112_main() + Transparent_Glow1473028895371_124_main() + Star_Swamp_3D_version_1473028937742_136_main());                                                                                                                                                                                                                        }\n",
  "vertex": "precision highp float;\nprecision highp int;\nuniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform float time;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\nvarying vec3 sky1473028779065_61_vPosition;\nvarying vec3 sky1473028779065_61_vNormal;\nvarying vec2 sky1473028779065_61_vUv;\nvarying vec2 vUv2;\nvarying vec2 Images_World_Based_Gradients1473028794671_76_vUv;\nvarying vec4 worldCoord;\nvarying float lightStrengthX;\nvarying float lightStrengthY;\nvarying float lightStrengthZ;\nvec3 lightPositionX = vec3(1.0, 0.0, 0.0);\nvec3 lightPositionY = vec3(0.0, 1.0, 0.0);\nvec3 lightPositionZ = vec3(0.0, 0.0, 1.0);\nfloat getLightStrength(vec3 lightPosition, vec3 norm) \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            return pow(min(abs(dot(normalize(norm), normalize(vec3(vec4(lightPosition, 1.0) * modelMatrix)))), 1.0), 2.0);\n                                                                                                                                                                                                                        }\nvarying vec2 Cube_Edges1473028860737_112_vUv;\nvarying vec3 fNormal;\nvarying vec3 fPosition;\nvarying vec2 Star_Swamp_3D_version_1473028937742_136_vUv;\nvarying vec3 Star_Swamp_3D_version_1473028937742_136_vPosition;\nvarying vec3 Star_Swamp_3D_version_1473028937742_136_vNormal;\nvec4 sky1473028779065_61_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 sky1473028779065_61_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                            sky1473028779065_61_vNormal = normal;\n                                                                                                                                                                                                                            sky1473028779065_61_vUv = uv;\n                                                                                                                                                                                                                            vUv2 = uv2;\n                                                                                                                                                                                                                            sky1473028779065_61_vPosition = position;\n                                                                                                                                                                                                                            sky1473028779065_61_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            return sky1473028779065_61_gl_Position *= 0.0;\n                                                                                                                                                                                                                        }\nvec4 Images_World_Based_Gradients1473028794671_76_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Images_World_Based_Gradients1473028794671_76_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                            worldCoord = modelMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            Images_World_Based_Gradients1473028794671_76_vUv = uv;\n                                                                                                                                                                                                                            lightStrengthX = getLightStrength(lightPositionX, normal);\n                                                                                                                                                                                                                            lightStrengthY = getLightStrength(lightPositionY, normal);\n                                                                                                                                                                                                                            lightStrengthZ = getLightStrength(lightPositionZ, normal);\n                                                                                                                                                                                                                            Images_World_Based_Gradients1473028794671_76_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            return Images_World_Based_Gradients1473028794671_76_gl_Position *= 0.0;\n                                                                                                                                                                                                                        }\nvec4 Cube_Edges1473028860737_112_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Cube_Edges1473028860737_112_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                            Cube_Edges1473028860737_112_vUv = uv;\n                                                                                                                                                                                                                            Cube_Edges1473028860737_112_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            return Cube_Edges1473028860737_112_gl_Position *= 1.0;\n                                                                                                                                                                                                                        }\nvec4 Transparent_Glow1473028895371_124_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Transparent_Glow1473028895371_124_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                            fNormal = normalize(normalMatrix * normal);\n                                                                                                                                                                                                                            vec4 pos = modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            fPosition = pos.xyz;\n                                                                                                                                                                                                                            Transparent_Glow1473028895371_124_gl_Position = projectionMatrix * pos;\n                                                                                                                                                                                                                            return Transparent_Glow1473028895371_124_gl_Position *= 1.0;\n                                                                                                                                                                                                                        }\nvec4 Star_Swamp_3D_version_1473028937742_136_main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            vec4 Star_Swamp_3D_version_1473028937742_136_gl_Position = vec4(0.0);\n                                                                                                                                                                                                                            Star_Swamp_3D_version_1473028937742_136_vUv = uv;\n                                                                                                                                                                                                                            Star_Swamp_3D_version_1473028937742_136_vPosition = position;\n                                                                                                                                                                                                                            Star_Swamp_3D_version_1473028937742_136_vNormal = normal;\n                                                                                                                                                                                                                            Star_Swamp_3D_version_1473028937742_136_gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n                                                                                                                                                                                                                            return Star_Swamp_3D_version_1473028937742_136_gl_Position *= 1.0;\n                                                                                                                                                                                                                        }\nvoid main() \n                                                                                                                                                                                                                        {\n                                                                                                                                                                                                                            gl_Position = sky1473028779065_61_main() + Images_World_Based_Gradients1473028794671_76_main() + Cube_Edges1473028860737_112_main() + Transparent_Glow1473028895371_124_main() + Star_Swamp_3D_version_1473028937742_136_main();                                                                                                                                                                                                                        }\n",
  "uniforms": {
    "cameraPosition": {
      "type": "v3",
      "glslType": "vec3"
    },
    "time": {
      "type": "f",
      "glslType": "float"
    },
    "resolution": {
      "value": {
        "x": "1",
        "y": "1"
      },
      "type": "v2",
      "glslType": "vec2"
    },
    "uvScale": {
      "value": {
        "x": "1",
        "y": "1",
        "z": "1"
      },
      "type": "v3",
      "glslType": "vec3"
    },
    "uvOffset": {
      "value": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "type": "v3",
      "glslType": "vec3"
    },
    "colorFront1": {
      "value": {
        "r": 0.08224852076592937,
        "g": 0.5347623580439764,
        "b": 0.9429216962178988
      },
      "type": "c",
      "glslType": "vec3"
    },
    "colorFront2": {
      "value": {
        "r": 0.1316570359751188,
        "g": 0.9568389932655188,
        "b": 0.9857965803548148
      },
      "type": "c",
      "glslType": "vec3"
    },
    "colorRight1": {
      "value": {
        "r": 0.8784313725490196,
        "g": 0.807843137254902,
        "b": 0.00392156862745098
      },
      "type": "c",
      "glslType": "vec3"
    },
    "colorRight2": {
      "value": {
        "r": 0.3526944247684505,
        "g": 0.6239012197529334,
        "b": 0.44452414645353233
      },
      "type": "c",
      "glslType": "vec3"
    },
    "colorTop1": {
      "value": {
        "r": 0.6355699701219713,
        "g": 0.008164638017828407,
        "b": 0.6270233066660793
      },
      "type": "c",
      "glslType": "vec3"
    },
    "colorTop2": {
      "value": {
        "r": 0.9098039215686274,
        "g": 0.48627450980392156,
        "b": 0.00784313725490196
      },
      "type": "c",
      "glslType": "vec3"
    },
    "map": {
      "value": null,
      "type": "t",
      "glslType": "sampler2D"
    },
    "gradientMix": {
      "value": "0.24367645",
      "type": "f",
      "glslType": "float"
    },
    "luminosity": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "falloff": {
      "value": "4.18104668",
      "type": "f",
      "glslType": "float"
    },
    "Cube_Edges1473028860737_112_color": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "Cube_Edges1473028860737_112_brightness": {
      "value": "10.04980631",
      "type": "f",
      "glslType": "float"
    },
    "start": {
      "value": "0.10505174",
      "type": "f",
      "glslType": "float"
    },
    "end": {
      "value": "0.85014978",
      "type": "f",
      "glslType": "float"
    },
    "alpha": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "Transparent_Glow1473028895371_124_color": {
      "value": {
        "r": 1,
        "g": 1,
        "b": 1
      },
      "type": "c",
      "glslType": "vec3"
    },
    "baseColor": {
      "value": {
        "r": 0.6549019607843137,
        "g": 0.6549019607843137,
        "b": 0.6549019607843137
      },
      "type": "c",
      "glslType": "vec3"
    },
    "scale": {
      "value": "1",
      "type": "f",
      "glslType": "float"
    },
    "Star_Swamp_3D_version_1473028937742_136_brightness": {
      "value": "2.5",
      "type": "f",
      "glslType": "float"
    }
  },
  "url": "http://shaderfrog.com/app/view/966",
  "user": {
    "username": "shaderfrag",
    "url": "http://shaderfrog.com/app/profile/andrewray"
  }
}